/*
 * Arquivo sem erros
 */

struct Focus {
	var
		{
			int cim;
			boolean aff;
		}
}

struct Teste {
	var
		{
			int b;
			int ba;
			struct Focus fff;
		}
}


const
{
	int teste, cinco = 5;
	int a[2][2] = {5, 2}, {3, 5};
	int oxe = 9;
}
var
{
	int b;
	real numero_real;
	real numero_real2;
	int inteiro;
	int absc;
	real id;
	real situacao;
	real ux;
	struct Teste qo;
	struct Teste agora;
}

procedure oxe1()
{
	var
	{
		int oxe2;
		int aa;
	}
	
	print();
	local.aa = 1;
}

procedure oxe1(int a)
{
	var
	{
		int aa;
	}
	
	print();
	global.inteiro = 1.2;
	local.aa = 1;
}

function int oxe1(int b3, int b4, int b5, int b6)
{
	var
	{
		int aa;
	}
	
	print();
	global.inteiro = 1;
	local.aa = 1;

	return aa + b4;
}

function int oxe1(int bbb, real c, real b)
{
	var
	{
		int aa;
	}
	bbb = 5;
	print();
	global.inteiro = 1;
	local.aa = 1;

	return 5;
}

function int oxe1(int bbb,struct Focus c, int b4, int cccc)
{
	return 5;
}

function int funcaoo( real b, int b34, int ba082)
{
	var
	{
		int aa;
	}
	print();
	global.inteiro = 1;
	local.aa = 1;

	return 2;
}

function int outra( int b, int aaaaa,int f2)
{
	var
	{
		int aa;
		int c;
	}
	print();
	global.inteiro = b + 1.2 + local.c;
	local.aa = 1;

	return b + 1.2 + local.c;
}

procedure start()
{
	var
	{
		int ux;
		real coisa;
		int id;
		int ue;
		int agora;
		boolean neto;
		struct Teste algo;
		struct Teste agoranao;
	}
	print();
	ux = ux + 2;
}